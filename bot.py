import requests
import xml.etree.ElementTree as ET

def test_rss_feed():
    """–¢–µ—Å—Ç—É—î–º–æ –æ–¥–∏–Ω RSS —Ñ—ñ–¥ –±–µ–∑ feedparser"""
    
    rss_url = "https://www.skysports.com/rss/football"
    
    try:
        print(f"üîç –¢–µ—Å—Ç—É—î–º–æ: {rss_url}")
        
        # –ó–∞–ø–∏—Ç –¥–æ RSS
        response = requests.get(rss_url, timeout=10)
        print(f"‚úÖ –°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        # –ü–∞—Ä—Å–∏–º–æ XML
        root = ET.fromstring(response.content)
        
        # –ó–Ω–∞—Ö–æ–¥–∏–º–æ –ø–µ—Ä—à–∏–π item
        items = root.findall('.//item')
        print(f"üì∞ –ó–Ω–∞–π–¥–µ–Ω–æ –Ω–æ–≤–∏–Ω: {len(items)}")
        
        if items:
            first_item = items[0]
            
            # –í–∏—Ç—è–≥—É—î–º–æ –¥–∞–Ω—ñ
            title = first_item.find('title').text if first_item.find('title') is not None else "No title"
            description = first_item.find('description').text if first_item.find('description') is not None else "No description"
            link = first_item.find('link').text if first_item.find('link') is not None else "No link"
            
            print("\n" + "="*60)
            print("üìã –ü–ï–†–®–ê –ù–û–í–ò–ù–ê:")
            print("="*60)
            print(f"üè∑Ô∏è –ó–∞–≥–æ–ª–æ–≤–æ–∫: {title}")
            print(f"üìù –û–ø–∏—Å: {description[:200]}...")
            print(f"üîó –ü–æ—Å–∏–ª–∞–Ω–Ω—è: {link}")
            print("="*60)
            
            return title, description
        else:
            print("‚ùå –ù–æ–≤–∏–Ω–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
            
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
        return None, None

if __name__ == "__main__":
    test_rss_feed()
