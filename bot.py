import os
import requests
import time
from datetime import datetime
import re
import json
import threading
from http.server import HTTPServer, SimpleHTTPRequestHandler

TELEGRAM_TOKEN = "7908433957:AAEyetZTWACBNn6t-wHPQwB89p1PtkQEvfg"
CHANNEL_ID = "@fiveleaguesua"

CLUBS = {
    'manchester united': 'üî¥ –ú–∞–Ω—á–µ—Å—Ç–µ—Ä –Æ–Ω–∞–π—Ç–µ–¥',
    'manchester city': 'üîµ –ú–∞–Ω—á–µ—Å—Ç–µ—Ä –°—ñ—Ç—ñ',
    'liverpool': 'üî¥ –õ—ñ–≤–µ—Ä–ø—É–ª—å',
    'chelsea': 'üîµ –ß–µ–ª—Å—ñ',
    'arsenal': 'üî¥ –ê—Ä—Å–µ–Ω–∞–ª',
    'tottenham': '‚ö™ –¢–æ—Ç—Ç–µ–Ω–≥–µ–º',
    'real madrid': '‚ö™ –†–µ–∞–ª –ú–∞–¥—Ä–∏–¥',
    'barcelona': 'üîµ –ë–∞—Ä—Å–µ–ª–æ–Ω–∞',
    'juventus': '‚ö´ –Æ–≤–µ–Ω—Ç—É—Å',
    'milan': 'üî¥ –ú—ñ–ª–∞–Ω',
    'bayern': 'üî¥ –ë–∞–≤–∞—Ä—ñ—è',
    'psg': 'üîµ –ü–°–ñ'
}

processed_articles = set()

def translate_text(text):
    """–ü–µ—Ä–µ–∫–ª–∞–¥ —á–µ—Ä–µ–∑ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∏–π API"""
    try:
        text = re.sub(r'<[^>]+>', '', text)
        text = re.sub(r'\s+', ' ', text).strip()
        
        if len(text) > 500:
            text = text[:500]
            
        url = "https://api.mymemory.translated.net/get"
        params = {'q': text, 'langpair': 'en|uk'}
        response = requests.get(url, params=params, timeout=10)
        data = response.json()
        
        if 'responseData' in data:
            translated = data['responseData']['translatedText']
            if "MYMEMORY WARNING" not in translated.upper():
                return translated
        return text
    except:
        return text

def get_club_name(text):
    """–û—Ç—Ä–∏–º—É—î–º–æ —É–∫—Ä–∞—ó–Ω—Å—å–∫–µ —ñ–º'—è –∫–ª—É–±—É"""
    text_lower = text.lower()
    for eng_name, ua_name in CLUBS.items():
        if eng_name in text_lower:
            return ua_name
    return None

def determine_post_type(title, description):
    """–í–∏–∑–Ω–∞—á–∞—î–º–æ —Ç–∏–ø –Ω–æ–≤–∏–Ω–∏"""
    text = (title + " " + description).lower()
    
    if any(word in text for word in ["transfer", "signing", "deal", "million"]):
        return "transfer"
    elif any(word in text for word in ["injury", "ruled out", "injured"]):
        return "injury"
    elif any(word in text for word in ["sacked", "fired", "appointed"]):
        return "manager"
    elif any(word in text for word in ["goal", "scored", "performance"]):
        return "performance"
    else:
        return "general"

def format_post(title, description, source="Football News"):
    """–ü–æ–∫—Ä–∞—â–µ–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –ø–æ—Å—Ç–∞"""
    post_type = determine_post_type(title, description)
    
    emoji_map = {
        "transfer": "üí∞",
        "injury": "üè•", 
        "manager": "üëî",
        "performance": "‚öΩ",
        "general": "üì∞"
    }
    
    main_emoji = emoji_map.get(post_type, "üì∞")
    title_ua = translate_text(title)
    club = get_club_name(title + " " + description)
    
    # –§–æ—Ä–º—É—î–º–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫
    header_parts = [main_emoji]
    if club:
        header_parts.append(club)
    
    header = " ".join(header_parts)
    
    # –ü–æ—á–∞—Ç–æ–∫ –ø–æ—Å—Ç–∞
    post = f"{header}\n\n"
    post += f"<b>{title_ua}</b>\n\n"
    
    # –û–ø–∏—Å
    if description:
        description = re.sub('<.*?>', '', description)
        description = re.sub(r'\s+', ' ', description).strip()
        
        if len(description) > 300:
            description = description[:300] + "..."
            
        description_ua = translate_text(description)
        post += f"{description_ua}\n\n"
    
    # –ö–æ–Ω—Ç–µ–∫—Å—Ç
    context_map = {
        "transfer": "üíº <i>–¢—Ä–∞–Ω—Å—Ñ–µ—Ä–Ω—ñ –Ω–æ–≤–∏–Ω–∏</i>",
        "injury": "‚öïÔ∏è <i>–ú–µ–¥–∏—á–Ω—ñ –Ω–æ–≤–∏–Ω–∏</i>",
        "manager": "üè¢ <i>–ö–∞–¥—Ä–æ–≤—ñ –∑–º—ñ–Ω–∏</i>", 
        "performance": "üìä <i>–°–ø–æ—Ä—Ç–∏–≤–Ω—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏</i>",
        "general": "‚öΩ <i>–§—É—Ç–±–æ–ª—å–Ω—ñ –Ω–æ–≤–∏–Ω–∏</i>"
    }
    
    post += f"{context_map.get(post_type, '‚öΩ <i>–§—É—Ç–±–æ–ª—å–Ω—ñ –Ω–æ–≤–∏–Ω–∏</i>')}\n"
    post += f"üì∞ <i>–î–∂–µ—Ä–µ–ª–æ: {source}</i>"
    
    return post

def get_football_news():
    """–¢–µ—Å—Ç–æ–≤—ñ –Ω–æ–≤–∏–Ω–∏ –∑ —Ä–æ—Ç–∞—Ü—ñ—î—é"""
    test_news = [
        {
            "title": "Manchester United agree ‚Ç¨85m deal for Real Madrid midfielder",
            "description": "Manchester United have reached an agreement with Real Madrid to sign their star midfielder in a deal worth ‚Ç¨85 million. The transfer is expected to be completed this week.",
            "source": "Sky Sports"
        },
        {
            "title": "Liverpool's Mohamed Salah suffers hamstring injury, out for 4 weeks", 
            "description": "Liverpool forward Mohamed Salah has suffered a hamstring injury and will miss the next four weeks of action. The Egyptian was in excellent form this season.",
            "source": "BBC Sport"
        },
        {
            "title": "Chelsea sack manager after poor run of results",
            "description": "Chelsea have parted ways with their manager following a string of disappointing results. The club is already looking for a replacement.",
            "source": "ESPN"
        },
        {
            "title": "Barcelona target Arsenal striker in summer transfer window",
            "description": "Barcelona are reportedly interested in signing Arsenal's prolific striker during the summer transfer window. Talks are expected to begin soon.",
            "source": "Goal.com"
        },
        {
            "title": "Bayern Munich's star player scores hat-trick in Champions League",
            "description": "Bayern Munich's forward delivered a stunning hat-trick performance in the Champions League, leading his team to a commanding victory.",
            "source": "UEFA"
        }
    ]
    
    # –†–æ—Ç–∞—Ü—ñ—è –Ω–æ–≤–∏–Ω
    import random
    selected_news = random.choice(test_news)
    
    formatted = format_post(
        selected_news['title'], 
        selected_news['description'], 
        selected_news['source']
    )
    
    print(f"‚úÖ –°—Ñ–æ—Ä–º–æ–≤–∞–Ω–æ –ø–æ—Å—Ç:")
    print("="*60)
    print(formatted)
    print("="*60)
    
    return [formatted]

def send_message(text):
    """–ù–∞–¥—Å–∏–ª–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ Telegram"""
    url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
    data = {
        "chat_id": CHANNEL_ID, 
        "text": text, 
        "parse_mode": "HTML",
        "disable_web_page_preview": True
    }
    try:
        response = requests.post(url, data=data, timeout=10)
        return response
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è: {e}")
        return None

def run_server():
    """HTTP —Å–µ—Ä–≤–µ—Ä –¥–ª—è Render"""
    port = int(os.environ.get("PORT", 5000))
    server = HTTPServer(('', port), SimpleHTTPRequestHandler)
    print(f"üåê –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ –ø–æ—Ä—Ç—É {port}")
    server.serve_forever()

def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –±–æ—Ç–∞"""
    print("ü§ñ Five Leagues Bot v2.0 - –ó–∞–ø—É—Å–∫...")
    
    # –°—Ç–∞—Ä—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    start_msg = "ü§ñ <b>Five Leagues Bot v2.0 –∑–∞–ø—É—â–µ–Ω–æ!</b> üá∫üá¶\n\n‚öΩ –ú–æ–Ω—ñ—Ç–æ—Ä–∏–º–æ —Ç–æ–ø-–Ω–æ–≤–∏–Ω–∏ —Ñ—É—Ç–±–æ–ª—É..."
    result = send_message(start_msg)
    
    if result and result.status_code == 200:
        print("‚úÖ –°—Ç–∞—Ä—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ")
    else:
        print("‚ùå –ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è")
        if result:
            print(f"Status: {result.status_code}")
            print(f"Response: {result.text}")
    
    while True:
        try:
            current_time = datetime.now().strftime("%H:%M:%S")
            print(f"üïê {current_time} - –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–æ–≤–∏–Ω...")
            
            articles = get_football_news()
            
            if articles:
                best_article = articles[0]
                
                approval_msg = f"üìã <b>–ù–û–í–ò–ù–ê –ù–ê –ü–û–ì–û–î–ñ–ï–ù–ù–Ø:</b>\n\n{'-'*30}\n\n{best_article}\n\n{'-'*30}\n\n‚ùì <b>–ü—É–±–ª—ñ–∫—É–≤–∞—Ç–∏?</b> –¢–ê–ö/–ù–Ü"
                
                result = send_message(approval_msg)
                
                if result and result.status_code == 200:
                    print("üì§ –ù–æ–≤–∏–Ω—É –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –Ω–∞ –ø–æ–≥–æ–¥–∂–µ–Ω–Ω—è")
                else:
                    print("‚ùå –ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –Ω–æ–≤–∏–Ω–∏")
                    if result:
                        print(f"Status: {result.status_code}")
                        print(f"Response: {result.text}")
            
            print("‚è∞ –ù–∞—Å—Ç—É–ø–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–µ—Ä–µ–∑ 30 —Ö–≤–∏–ª–∏–Ω...")
            time.sleep(1800)  # 30 —Ö–≤–∏–ª–∏–Ω
            
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º—É —Ü–∏–∫–ª—ñ: {e}")
            time.sleep(300)  # 5 —Ö–≤–∏–ª–∏–Ω –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞—î–º–æ HTTP —Å–µ—Ä–≤–µ—Ä –≤ –æ–∫—Ä–µ–º–æ–º—É –ø–æ—Ç–æ—Ü—ñ
    threading.Thread(target=run_server, daemon=True).start()
    
    # –ó–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç–∞
    main()
